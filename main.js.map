{"version":3,"sources":["webpack://mesto/./src/scripts/components/Section.js","webpack://mesto/./src/scripts/components/Card.js","webpack://mesto/./src/scripts/components/Popup.js","webpack://mesto/./src/scripts/components/PopupWithImage.js","webpack://mesto/./src/scripts/components/PopupWithForm.js","webpack://mesto/./src/scripts/components/PopupWithSubmit.js","webpack://mesto/./src/scripts/components/UserInfo.js","webpack://mesto/./src/scripts/components/Formvalidator.js","webpack://mesto/./src/scripts/components/Api.js","webpack://mesto/./src/scripts/utils/constants.js","webpack://mesto/./src/scripts/utils/functions.js","webpack://mesto/./src/pages/index.js"],"names":["Section","containerSelector","renderer","this","_renderer","_container","cardsArray","userData","forEach","item","element","prepend","Card","cardData","templateSelector","openFullScreenImage","popupDeleteCard","api","deleteCard","_popupDeleteCard","changeButtonContent","_cardId","then","_element","remove","close","catch","err","console","log","_name","name","_image","link","_id","_cardOwnerId","owner","_likes","likes","_userId","_templateSelector","_getTemplate","_cardImage","querySelector","_likeButton","_likeButtonLoading","_likesCounter","_deleteButton","_showPopupImage","Object","keys","some","like","classList","add","src","alt","_createDeleteButton","_checkMyLike","textContent","length","_setEventListeners","document","content","cloneNode","addEventListener","_handleLikeButton","open","data","toggle","loading","apiRequest","res","_toggleLikeButton","finally","_loadingLikeButton","contains","_changeLikeStatus","removeLike","addLike","Popup","popupSelector","_handleEscClose","event","code","_popupSelector","removeEventListener","evt","target","PopupWithImage","imageName","imageLink","_popupFullSizeImage","setAttribute","_popupFullSizeImageText","PopupWithForm","handleFormSubmit","_handleFormSubmit","_form","_submitButton","_inputList","querySelectorAll","_inputsValue","input","value","reset","_getInputValues","PopupWithSubmit","deleteMethod","_deleteMethod","_deleteCardForm","_deleteCardConfirmButton","setTimeout","preventDefault","UserInfo","description","avatar","_nameSelector","_descriptionSelector","_avatarSelector","userInfo","style","backgroundImage","inputName","inputDescription","FormValidator","config","validatedForm","_formSelector","formSelector","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_validatedForm","Array","from","_hideAllInputsErrors","_toggleButtonState","inputElement","_isValid","_hasInvalidInput","disabled","validity","valid","_hideInputError","_showInputError","validationMessage","errorMessage","errorElement","id","Api","options","_url","url","_headers","headers","_body","body","message","ok","json","Promise","reject","status","fetch","_onError","method","authorization","JSON","stringify","cardId","cardListSelector","editProfileButton","popupAddCard","addNewCardButtonPopup","galeryLoading","personName","personDescription","personAvatar","personAvatarLoading","popupProfile","popupFullSizeCard","popupPersonAvatar","popupPersonName","popupPersonDescription","popupAddNewCardButtonSubmit","popupEditProfileButtonSubmit","popupAvatarChangeButtonSubmit","loadingAvatar","editProfileValidation","addNewCardValidation","changeUserAvatarValidation","popupWithImage","popupWithDeleteButton","user","cardList","addItem","createNewCard","popupChangeUserAvatar","formData","changeAvatar","popup_description","newLink","setUserAvatar","popupEditProfileForm","editUserInfo","popup_name","about","setUserInfo","popupAddNewCard","addNewCard","card","generateCard","all","getUserInfo","getAllCards","renderItems","reverse","enableValidation","setEventListener","resetValidation"],"mappings":"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","file":"main.js","sourcesContent":["export class Section {\n    constructor({ renderer }, containerSelector) {\n    this._renderer = renderer;\n    this._container = containerSelector;\n  }\n\n  renderItems(cardsArray, userData) {\n    cardsArray.forEach((item) => {\n      this._renderer(item, userData);\n    });\n  }\n\n  addItem(element) {\n    this._container.prepend(element);\n  }\n}","export class Card {\n  constructor(cardData, userData, templateSelector, openFullScreenImage, popupDeleteCard, api) {\n    this._name = cardData.name;\n    this._image = cardData.link;\n    this._cardId = cardData._id;\n    this._cardOwnerId = cardData.owner._id;\n    this._likes = cardData.likes;\n    this._userId = userData._id;\n    this._templateSelector = templateSelector;\n    this._element = this._getTemplate();\n    this._cardImage = this._element.querySelector('.galery__img');\n    this._likeButton = this._element.querySelector('.galery__heart');\n    this._likeButtonLoading = this._element.querySelector('.galery__heart_loading');\n    this._likesCounter = this._element.querySelector('.galery__likes-counter');\n    this._deleteButton = this._element.querySelector('.galery__delete-card-button');\n    this._showPopupImage = () => openFullScreenImage(this._name, this._image);\n    this._popupDeleteCard = popupDeleteCard;\n    this.api = api;\n  }\n\n  // Проверяет, поставил ли пользователь лайки\n  _checkMyLike() {\n    const myLike = Object.keys(this._likes).some(like => {\n      return this._likes[like]._id == this._userId;\n    });\n    if(myLike) {\n      this._likeButton.classList.add('galery__heart_active');\n    }\n  }\n\n  // Создает кнопку удаления карточки только на своих карточках\n  _createDeleteButton() {\n    if(this._userId == this._cardOwnerId) {\n      this._deleteButton.classList.remove('galery__delete-card-button_visible_hidden');\n    }\n  }\n\n  generateCard() {\n    this._cardImage.src = this._image;\n    this._cardImage.alt = this._name;\n    this._createDeleteButton();\n    this._checkMyLike();\n    this._element.querySelector('.galery__text').textContent = this._name;\n    this._likesCounter.textContent = this._likes.length;\n    this._setEventListeners();\n    return this._element;\n  }\n\n  _getTemplate() {\n    const cardElement = document\n      .querySelector(this._templateSelector)\n      .content\n      .querySelector('.galery__card')\n      .cloneNode(true);\n    return cardElement;\n  }\n\n  _setEventListeners() {\n    this._likeButton.addEventListener('click', () => {\n      this._handleLikeButton();\n    });\n    this._cardImage.addEventListener('click', () => {\n      this._showPopupImage();\n    });\n    this._deleteButton.addEventListener('click', () => {\n      this._popupDeleteCard.open(this.deleteCard);\n    });\n  }\n\n  _toggleLikeButton(data) {\n    this._likeButton.classList.toggle('galery__heart_active');\n    this._likesCounter.textContent = data.likes.length;  \n  }\n\n  _loadingLikeButton(loading) {\n    if(loading == true) {\n      this._likeButton.classList.add('galery__heart_visible_hidden');\n      this._likeButtonLoading.classList.remove('galery__heart_visible_hidden');\n    } else {\n      this._likeButton.classList.remove('galery__heart_visible_hidden');\n      this._likeButtonLoading.classList.add('galery__heart_visible_hidden');\n    }\n  }\n\n  _changeLikeStatus(apiRequest) {\n    apiRequest\n    .then(res => {\n      this._toggleLikeButton(res);\n    })\n    .catch(err => console.log(err))\n    .finally(() => this._loadingLikeButton(false));\n  }\n\n  // добавляет и удаляет лайки.\n  // Значения берутся с сервера\n  _handleLikeButton() {\n    this._loadingLikeButton(true);\n    if(this._likeButton.classList.contains('galery__heart_active')) {\n      this._changeLikeStatus(this.api.removeLike(this._cardId));\n    } else {\n      this._changeLikeStatus(this.api.addLike(this._cardId));\n    }\n }\n\n  // удаление карточки\n  deleteCard = () => {\n    this._popupDeleteCard.changeButtonContent();\n    this.api.deleteCard(this._cardId)\n    .then(() => {\n      this._element.remove();\n      this._element = null;\n    })\n    .then(() => this._popupDeleteCard.close())\n    .catch(err => console.log(err));\n  }\n}\n","export class Popup {\n  constructor(popupSelector) {\n    this._popupSelector = popupSelector;\n  }\n\n  _handleEscClose = (event) => {\n    if(event.code === 'Escape') {\n      this.close();\n    }\n  }\n  \n  open() {\n    this._popupSelector.classList.add('popup_opened');\n    document.addEventListener('keydown', this._handleEscClose)\n  }\n\n  close() {\n    this._popupSelector.classList.remove('popup_opened');\n    document.removeEventListener('keydown', this._handleEscClose);\n  }\n\n  setEventListener() {\n    this._popupSelector.addEventListener('click', (evt) => {\n      if(evt.target.classList.contains('popup_opened') || \n      evt.target.classList.contains('popup__exit-button')) {\n        this.close();\n      }\n    });\n  }\n}","import { Popup } from './Popup.js';\n\nexport class PopupWithImage extends Popup {\n  constructor(popupSelector) {\n    super(popupSelector);\n    this._popupFullSizeImage = this._popupSelector.querySelector('.galery__fulsize-img');\n    this._popupFullSizeImageText = this._popupSelector.querySelector('.galery__popup-text');\n  }\n\n  open = (imageName, imageLink) => {    \n    super.open();\n    this._popupFullSizeImage.setAttribute('src', imageLink);\n    this._popupFullSizeImageText.setAttribute('alt', imageName);\n    this._popupFullSizeImageText.textContent = imageName;  \n  }\n}","import { Popup } from './Popup.js';\n\nexport class PopupWithForm extends Popup {\n  constructor({ popupSelector, handleFormSubmit }) {\n    super(popupSelector);\n    this._handleFormSubmit = handleFormSubmit;\n    this._form = this._popupSelector.querySelector('.popup__form');\n    this._submitButton = this._popupSelector.querySelector('.popup__submit-button');\n  }\n\n  _getInputValues() {\n    this._inputList = this._form.querySelectorAll('.popup__input');\n    this._inputsValue = {}\n    this._inputList.forEach(input => this._inputsValue[input.name] = input.value);\n    return this._inputsValue;\n  }\n\n  close() {\n    super.close();\n    this._form.reset();\n  }\n\n  setEventListener() {\n    super.setEventListener();\n    this._form.addEventListener('submit', () => {\n      this._handleFormSubmit(this._getInputValues());\n    });\n  } \n}","import { Popup } from \"./Popup\";\n\nexport class PopupWithSubmit extends Popup {\n  constructor(popupSelector) {\n    super(popupSelector);\n    this._deleteCardForm = document.querySelector('.popup__form_delete_new-card');\n    this._deleteCardConfirmButton = document.querySelector('.popup__submit-button_delete-confirm');\n    this._deleteMethod;\n  }\n\n  open = (deleteMethod) => {\n    super.open();\n    this._deleteMethod = deleteMethod;\n  }\n\n  changeButtonContent() {\n    this._deleteCardConfirmButton.textContent = 'Удаление...';\n  }\n\n  close() {\n    super.close();\n    setTimeout((() => this._deleteCardConfirmButton.textContent = 'Да'), 500);\n  }\n\n  setEventListener() {\n    super.setEventListener();\n    this._deleteCardForm.addEventListener('submit', (evt) => {\n      evt.preventDefault();\n      this._deleteMethod();\n    });\n  }\n}","export class UserInfo {\n  constructor({ name, description, avatar }) {\n    this._nameSelector = name;\n    this._descriptionSelector = description;\n    this._avatarSelector = avatar;\n  }\n\n  getUserInfo() {\n    const userInfo = {};\n    userInfo.name = this._nameSelector.textContent;\n    userInfo.description = this._descriptionSelector.textContent;\n    userInfo.avatar = this._avatarSelector.style.backgroundImage;\n    return userInfo;\n  }\n\n  setUserAvatar({ avatar }) {\n    this._avatarSelector.style.backgroundImage = avatar;\n  }\n  \n  setUserInfo({inputName, inputDescription}) {\n    this._nameSelector.textContent = inputName;\n    this._descriptionSelector.textContent = inputDescription;\n  }\n}","export class FormValidator {\n  constructor(config, validatedForm) {\n    this._formSelector = config.formSelector;\n    this._inputSelector = config.inputSelector;\n    this._submitButtonSelector = config.submitButtonSelector;\n    this._inactiveButtonClass = config.inactiveButtonClass;\n    this._inputErrorClass = config.inputErrorClass;\n    this._errorClass = config.errorClass;\n\n    this._validatedForm = document.querySelector(validatedForm);\n    this._inputList = Array.from(this._validatedForm.querySelectorAll(this._inputSelector));\n    this._submitButton = this._validatedForm.querySelector(this._submitButtonSelector);\n  }\n\n  enableValidation() {\n    this._validatedForm.addEventListener('submit', (evt) => {\n      evt.preventDefault();\n    });\n    this._setEventListeners();\n  }\n\n  resetValidation() {\n    this._hideAllInputsErrors();\n    this._toggleButtonState();\n  }\n\n  _setEventListeners() {\n    this._toggleButtonState();\n    this._inputList.forEach(inputElement => {\n      inputElement.addEventListener('input', () => {\n        this._isValid(inputElement);\n        this._toggleButtonState();\n      });\n    });\n  }\n\n  _toggleButtonState() {\n    if (this._hasInvalidInput()) {\n      this._submitButton.classList.add(this._inactiveButtonClass);\n      this._submitButton.disabled = 'disabled';\n    } else {\n      this._submitButton.classList.remove(this._inactiveButtonClass);\n      this._submitButton.disabled = false;\n    }\n  }\n\n  _hasInvalidInput() {\n    return this._inputList.some((inputElement) => {\n      return !inputElement.validity.valid;\n    });\n  }\n\n  _isValid(inputElement) {\n    if (!inputElement.validity.valid) {\n      this._showInputError(inputElement, inputElement.validationMessage);\n    } else {\n      this._hideInputError(inputElement);\n    }\n  }\n\n  _showInputError(inputElement, errorMessage) {\n    const errorElement = this._validatedForm.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.add(this._inputErrorClass);\n    errorElement.classList.add(this._errorClass);\n    errorElement.textContent = errorMessage;\n  }\n\n  _hideInputError(inputElement) {\n    const errorElement = this._validatedForm.querySelector(`.${inputElement.id}-error`);\n    inputElement.classList.remove(this._inputErrorClass);\n    errorElement.classList.remove(this._errorClass);\n    errorElement.textContent = '';\n  }\n\n  _hideAllInputsErrors() {\n    this._inputList.forEach(inputElement => {\n      this._hideInputError(inputElement);\n    });\n  }\n}\n","export class Api {\n  constructor(options) {\n    this._url = options.url;\n    this._headers = options.headers;\n    this._body = options.body;\n  }\n\n  _onError(res, message) {\n    if(res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`${message}: ` + res.status);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._url}users/me`, {\n      headers: this._headers\n    })\n    .then(res => this._onError(res, 'Ошибка при обращении к серверу'))\n  }\n\n  editUserInfo(data) {\n    return fetch(`${this._url}users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this._headers.authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n      })\n      .then(res => this._onError(res, 'Ошибка при редактировании данных пользователя'))\n  }\n\n  getAllCards() {\n    return fetch(`${this._url}cards/`, {\n        headers: this._headers\n      })\n      .then(res => this._onError(res, 'Ошибка при получении данных карточек'))\n  }\n\n  addNewCard(data) {\n    return fetch(`${this._url}cards/`, {\n      method: 'POST',\n      headers: {\n        authorization: this._headers.authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n    .then(res => this._onError(res, 'Ошибка при добавлении новой карточки'))\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._url}cards/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(res => this._onError(res, 'Ошибка при удалении картчоки'))\n  }\n\n  addLike(cardId) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: 'PUT',\n      headers: this._headers\n    })\n    .then(res => this._onError(res, 'Ошибка при обработке лайка'))\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._url}cards/likes/${cardId}`, {\n      method: 'DELETE',\n      headers: this._headers\n    })\n    .then(res => this._onError(res, 'Ошибка при обработке лайка'))\n  }\n\n  changeAvatar(data) {\n    return fetch('https://mesto.nomoreparties.co/v1/cohort-20/users/me/avatar', {\n      method: 'PATCH',\n      headers: {\n        authorization: this._headers.authorization,\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    })\n    .then(res => this._onError(res, 'Не удалось изменить аватарку'))\n  }\n}","const cardListSelector = document.querySelector('.galery__cards');\nconst editProfileButton = document.querySelector('.profile__edit');\nconst popupAddCard = document.querySelector('.popup_cards_add-form');\nconst addNewCardButtonPopup = document.querySelector('.profile__add-card-button');\nconst galeryLoading = document.querySelector('.galery__card_loading');\n\nconst personAvatarForm = document.querySelector('.popup__form_edit_avatar');\nconst personName = document.querySelector('.profile__title');\nconst personDescription = document.querySelector('.profile__subtitle');\nconst personAvatar = document.querySelector('.profile__image');\nconst personAvatarLoading = document.querySelector('.profile__image_loading');\n\nconst popupProfile = document.querySelector('.popup_profile_edit-form');\nconst popupFullSizeCard = document.querySelector('.galery_popup');\nconst popupDeleteCard = document.querySelector('.popup_card_delete');\nconst popupPersonAvatar = document.querySelector('.popup_change_avatar');\nconst popupPersonName = document.querySelector('.popup__input_type_name');\nconst popupPersonDescription = document.querySelector('.popup__input_type_description');\nconst popupAddNewCardButtonSubmit = popupAddCard.querySelector('.popup__submit-button');\nconst popupEditProfileButtonSubmit = popupProfile.querySelector('.popup__submit-button');\nconst popupAvatarChangeButtonSubmit = popupPersonAvatar.querySelector('.popup__submit-button');\nconst popupSubmitButton = document.querySelector('.popup__submit-button');\n\nconst config = {\n  formSelector: '.popup__form',\n  inputSelector: '.popup__input',\n  submitButtonSelector: '.popup__submit-button',\n  inactiveButtonClass: 'popup__submit-button_type_disabled',\n  inputErrorClass: 'popup__input_type_error',\n  errorClass: 'popup__error_visible',\n};\n\nexport { cardListSelector, popupProfile, editProfileButton, popupAddCard, \n  addNewCardButtonPopup, popupFullSizeCard, popupDeleteCard, popupSubmitButton, config, \n  personAvatarForm, personAvatar, popupPersonAvatar, popupPersonName, personName, \n  personDescription, popupPersonDescription, personAvatarLoading, galeryLoading, \n  popupAddNewCardButtonSubmit, popupEditProfileButtonSubmit, popupAvatarChangeButtonSubmit };","import { personAvatar, personAvatarLoading } from './constants.js';\n\nexport function loadingAvatar(loading) {\n  if(loading == true) {\n    personAvatar.classList.add('profile__image_visible_hidden');\n    personAvatarLoading.classList.remove('profile__image_visible_hidden');\n  } else {\n    personAvatar.classList.remove('profile__image_visible_hidden');\n    personAvatarLoading.classList.add('profile__image_visible_hidden');\n  }\n}","import './index.css';\n\nimport { Section }            from '../scripts/components/Section.js';\nimport { Card }               from '../scripts/components/Card.js';\nimport { PopupWithImage }     from '../scripts/components/PopupWithImage.js';\nimport { PopupWithForm }      from '../scripts/components/PopupWithForm.js';\nimport { PopupWithSubmit }    from '../scripts/components/PopupWithSubmit.js';\nimport { UserInfo }           from '../scripts/components/UserInfo.js';\nimport { FormValidator }      from '../scripts/components/Formvalidator.js';\nimport { Api }                from '../scripts/components/Api';\n\nimport { cardListSelector, popupProfile, editProfileButton, popupAddCard, popupDeleteCard,\n  addNewCardButtonPopup, popupFullSizeCard, personAvatar, popupPersonAvatar, popupPersonName, \n  personName, personDescription, popupPersonDescription, galeryLoading, popupAddNewCardButtonSubmit,\n  popupEditProfileButtonSubmit, popupAvatarChangeButtonSubmit,\n  config }                    \n                              from '../scripts/utils/constants.js';\n\nimport { loadingAvatar }      from '../scripts/utils/functions.js';\n\n\nconst editProfileValidation = new FormValidator(config, '.popup_profile_edit-form');\nconst addNewCardValidation = new FormValidator(config, '.popup_cards_add-form');\nconst changeUserAvatarValidation = new FormValidator(config, '.popup__form_edit_avatar');\nconst popupWithImage = new PopupWithImage(popupFullSizeCard);\nconst popupWithDeleteButton = new PopupWithSubmit(popupDeleteCard);\nconst user = new UserInfo({ \n  name: personName, \n  description: personDescription,\n  avatar: personAvatar\n});\n\nconst api = new Api({\n  url: 'https://mesto.nomoreparties.co/v1/cohort-20/',\n  headers: {\n    authorization: '036c4f02-47a4-4c62-a975-bbce507f165f'\n  }\n});\n\n// Рендер каждой карточки\nconst cardList = new Section({\n  renderer: (cardData, userData) => {\n    cardList.addItem(createNewCard(cardData, userData));\n  }\n}, cardListSelector);\n\n// Форма изменения аватара\n// Отправляет данные из сервера и записывает их в DOM \nconst popupChangeUserAvatar = new PopupWithForm({\n  popupSelector: popupPersonAvatar,\n  handleFormSubmit: (formData) => {\n    popupAvatarChangeButtonSubmit.textContent = 'Сохранение...';\n    api.changeAvatar({\n      avatar: formData.popup_description\n    })\n    .then(newLink => {\n      user.setUserAvatar({ avatar: `url(${newLink.avatar}`});\n      popupChangeUserAvatar.close();\n    })\n    .catch(err => console.log(err))\n    .finally(() => popupAvatarChangeButtonSubmit.textContent = 'Сохранить');\n  }\n})  \n\n// Форма данных пользователя. \n// Загружает данные на сервер и обновляет в DOM\nconst popupEditProfileForm = new PopupWithForm({\n  popupSelector: popupProfile,\n  handleFormSubmit: (formData) => {\n    popupEditProfileButtonSubmit.textContent = 'Сохранение...';\n    api.editUserInfo({\n      name: formData.popup_name,\n      about: formData.popup_description\n    })\n    .then(data => {\n      user.setUserInfo({\n        inputName: data.name, \n        inputDescription: data.about\n      });\n      popupEditProfileForm.close();\n    })\n    .catch(err => console.log(err))\n    .finally(() => popupEditProfileButtonSubmit.textContent = 'Сохранить');\n  }\n});\n\n// Форма сознания новой карточки\n// Создает экземпляр и записывает данные на сервер\n// В качестве рендера использует метод класса Section\nconst popupAddNewCard = new PopupWithForm({\n  popupSelector: popupAddCard,\n  handleFormSubmit: (formData) => {\n    popupAddNewCardButtonSubmit.textContent = 'Сохранение...';\n    api.addNewCard({\n      name: formData.popup_name,\n      link: formData.popup_description\n    })\n    .then(data => { \n      cardList.addItem(createNewCard(data, data.owner));\n      popupAddNewCard.close();\n    })\n    .catch(err => console.log(err))\n    .finally(() => popupAddNewCardButtonSubmit.textContent = 'Создать');\n  }\n});\n\n// Создает экземпляр карточки\n// Используется при рендере всек начальных карт и \n// при создании новой карточки через форму\nfunction createNewCard(cardData, userData) {\n  const card = new Card(cardData, userData, '.galery_card-tamplate', popupWithImage.open, popupWithDeleteButton, api);\n  const cardElement = card.generateCard(card);\n  return cardElement;\n}\n\n// Загружает и рендерит все элементы карточек с сервера,\n// добавляет в класс Card данные пользователя и \n// добавляет данные пользователя в DOM\nloadingAvatar(true);\nPromise.all([\n  api.getUserInfo(),\n  api.getAllCards()\n])\n  .then(([userData, cardData]) => {\n    user.setUserInfo({\n      inputName: userData.name,\n      inputDescription: userData.about\n    });\n    user.setUserAvatar({\n      avatar: `url(${userData.avatar})`\n    });\n    cardList.renderItems(cardData.reverse(), userData);\n  })\n  .catch(err => console.log(err))\n  .finally(() => {\n    loadingAvatar(false);\n    galeryLoading.classList.add('galery__card_loading_hidden');\n  });\n\neditProfileValidation.enableValidation();\naddNewCardValidation.enableValidation();\npopupWithImage.setEventListener();\npopupAddNewCard.setEventListener();\npopupEditProfileForm.setEventListener();\npopupWithDeleteButton.setEventListener();\n\neditProfileButton.addEventListener('click', () => {\n  const userData = user.getUserInfo();\n  popupEditProfileForm.open();\n  popupPersonName.value = userData.name;\n  popupPersonDescription.value = userData.description;\n  editProfileValidation.resetValidation();\n});\n\npersonAvatar.addEventListener('click', () => {\n  popupChangeUserAvatar.open();\n  changeUserAvatarValidation.enableValidation();\n  popupChangeUserAvatar.setEventListener();\n});\n\naddNewCardButtonPopup.addEventListener('click', () => {\n  popupAddNewCard.open();\n  addNewCardValidation.resetValidation();\n});\n"],"sourceRoot":""}